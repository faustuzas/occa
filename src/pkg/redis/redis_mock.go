// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/faustuzas/occa/src/pkg/redis (interfaces: Client)

// Package redis is a generated GoMock package.
package redis

import (
	context "context"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockClient is a mock of Client interface.
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient.
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance.
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// ListCollectionKeys mocks base method.
func (m *MockClient) ListCollectionKeys(arg0 context.Context, arg1 string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListCollectionKeys", arg0, arg1)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListCollectionKeys indicates an expected call of ListCollectionKeys.
func (mr *MockClientMockRecorder) ListCollectionKeys(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListCollectionKeys", reflect.TypeOf((*MockClient)(nil).ListCollectionKeys), arg0, arg1)
}

// SetCollectionItemWithTTL mocks base method.
func (m *MockClient) SetCollectionItemWithTTL(arg0 context.Context, arg1, arg2, arg3 string, arg4 time.Duration) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetCollectionItemWithTTL", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetCollectionItemWithTTL indicates an expected call of SetCollectionItemWithTTL.
func (mr *MockClientMockRecorder) SetCollectionItemWithTTL(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetCollectionItemWithTTL", reflect.TypeOf((*MockClient)(nil).SetCollectionItemWithTTL), arg0, arg1, arg2, arg3, arg4)
}
