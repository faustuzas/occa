// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/faustuzas/occa/src/pkg/auth (interfaces: TokenValidator,TokenIssuer)

// Package auth is a generated GoMock package.
package auth

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTokenValidator is a mock of TokenValidator interface.
type MockTokenValidator struct {
	ctrl     *gomock.Controller
	recorder *MockTokenValidatorMockRecorder
}

// MockTokenValidatorMockRecorder is the mock recorder for MockTokenValidator.
type MockTokenValidatorMockRecorder struct {
	mock *MockTokenValidator
}

// NewMockTokenValidator creates a new mock instance.
func NewMockTokenValidator(ctrl *gomock.Controller) *MockTokenValidator {
	mock := &MockTokenValidator{ctrl: ctrl}
	mock.recorder = &MockTokenValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenValidator) EXPECT() *MockTokenValidatorMockRecorder {
	return m.recorder
}

// Validate mocks base method.
func (m *MockTokenValidator) Validate(arg0 string) (Principal, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", arg0)
	ret0, _ := ret[0].(Principal)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Validate indicates an expected call of Validate.
func (mr *MockTokenValidatorMockRecorder) Validate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockTokenValidator)(nil).Validate), arg0)
}

// MockTokenIssuer is a mock of TokenIssuer interface.
type MockTokenIssuer struct {
	ctrl     *gomock.Controller
	recorder *MockTokenIssuerMockRecorder
}

// MockTokenIssuerMockRecorder is the mock recorder for MockTokenIssuer.
type MockTokenIssuerMockRecorder struct {
	mock *MockTokenIssuer
}

// NewMockTokenIssuer creates a new mock instance.
func NewMockTokenIssuer(ctrl *gomock.Controller) *MockTokenIssuer {
	mock := &MockTokenIssuer{ctrl: ctrl}
	mock.recorder = &MockTokenIssuerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenIssuer) EXPECT() *MockTokenIssuerMockRecorder {
	return m.recorder
}

// Issue mocks base method.
func (m *MockTokenIssuer) Issue(arg0 Principal) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Issue", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Issue indicates an expected call of Issue.
func (mr *MockTokenIssuerMockRecorder) Issue(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Issue", reflect.TypeOf((*MockTokenIssuer)(nil).Issue), arg0)
}
